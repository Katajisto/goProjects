{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["katex","require","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modifyCount","content","macros","from","to","doInsideBrackets","oldLen","settings","showEditor","texFont","handle","bind","assertThisInitialized","toggle","toggleEditor","changeFont","localStorage","savedMath","setState","event","newModifyCount","fieldVal","target","value","setItem","length","macro","texString","mathText","mathTextAfterMacro","rBrackets","lBrackets","inTextBlock","justStartedInTextBlock","i","substring","Math","abs","console","log","tex","_this2","rdy","map","x","handleMacro","math","renderToString","preprocess","throwOnError","react_default","a","createElement","className","onClick","type","checked","name","class","onChange","min","max","id","spellCheck","style","fontSize","dangerouslySetInnerHTML","__html","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c03d8a4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst katex = require(\"katex\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modifyCount: 0,\n      content: \"\\\\text{Welcome to }\\\\tmacs\\\\\\\\ 1+1=3\\\\\\\\ \\\\log_264=5\",\n      macros: [\n        //TODO: Consider if these macros should actually be stored in component state. This doesn't seem like the brightest idea.\n        //Macros for the katex editor, applied before rendering the math.\n        { from: \"#\", to: \"\\\\text\", doInsideBrackets: true },\n        { from: \"*\", to: \"\\\\cdot \", doInsideBrackets: true },\n        { from: \"\\\\and\", to: \"\\\\land\", doInsideBrackets: true },\n        { from: \"\\\\mot\", to: \"\\\\Box\", doInsideBrackets: true },\n        { from: \"\\\\or\", to: \"\\\\lor\", doInsideBrackets: true },\n        //FIXME: If there is whitespace between closing and opening brackets it causes \\frac{}_HERE_{} to fail.\n        //HACK: Not a real fix for the issue\n        { from: \"}\\n{\", to: \"}{\", doInsideBrackets: true },\n        { from: \"\\\\vec\", to: \"\\\\overline\", doInsideBrackets: true },\n        {\n          from: \"\\\\tmacs\",\n          to: \"\\\\boxed{\\\\tt{Tmacs}}\",\n          doInsideBrackets: true\n        },\n        { from: \"\\n\", to: \"\\\\\\\\\", doInsideBrackets: false }\n      ],\n      oldLen: 0,\n      settings: false,\n      showEditor: true,\n      texFont: 20\n    };\n    this.handle = this.handle.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleEditor = this.toggleEditor.bind(this);\n    this.changeFont = this.changeFont.bind(this);\n  }\n  //NOTE: Load saved math tKatajisto\n  componentDidMount() {\n    if (localStorage.savedMath) {\n      this.setState({\n        content: localStorage.savedMath\n      });\n    }\n  }\n  //NOTE: Update function.\n  handle(event) {\n    let fieldVal = event.target.value;\n    let newModifyCount;\n    if (this.state.modifyCount >= 10) {\n      localStorage.setItem(\"savedMath\", fieldVal);\n      newModifyCount = 0;\n    } else {\n      newModifyCount = this.state.modifyCount + 1;\n    }\n    this.setState({\n      content: fieldVal,\n      oldLen: fieldVal.length,\n      modifyCount: newModifyCount\n    });\n  }\n  //TODO: This might not be the best way to do this. tKatajisto\n  //FIXME: runs for every macro seperately. *PERFORMANCE ISSUES INCOMING*\n  handleMacro(macro, texString) {\n    //TODO: Clean up these into something nicer.\n    const mathText = texString;\n    let textIdentifier = \"\\\\text\";\n    let mathTextAfterMacro = \"\";\n    let rBrackets = 0;\n    let lBrackets = 0;\n    let inTextBlock = false;\n    let justStartedInTextBlock = false;\n    //HACK: Modifying i inside the loop is probably not idea.\n    for (let i = 0; i < mathText.length; i++) {\n      if (i + macro.from.length > mathText.length) {\n        mathTextAfterMacro += mathText.substring(\n          i,\n          i + Math.abs(i - mathText.length)\n        );\n        break;\n      }\n      if (mathText[i] === \"{\") lBrackets++;\n      if (mathText[i] === \"}\") rBrackets++;\n      if (inTextBlock) {\n        if (justStartedInTextBlock) {\n          if (mathText[i] === \"{\") {\n            justStartedInTextBlock = false;\n          }\n        } else {\n          if (lBrackets === rBrackets) {\n            inTextBlock = false;\n          }\n        }\n        mathTextAfterMacro += mathText[i];\n        continue;\n      }\n      if (mathText.substring(i, i + textIdentifier.length) === textIdentifier) {\n        i += textIdentifier.length - 1;\n        mathTextAfterMacro += textIdentifier;\n        inTextBlock = true;\n        justStartedInTextBlock = true;\n        continue;\n      }\n      if (mathText[i] === \"{\") lBrackets++;\n      if (mathText[i] === \"}\") rBrackets++;\n      if (!macro.doInsideBrackets && lBrackets === rBrackets) {\n        if (mathText.substring(i, i + macro.from.length) === macro.from) {\n          mathTextAfterMacro += macro.to;\n          i += macro.from.length - 1;\n          continue;\n        }\n      } else if (mathText.substring(i, i + macro.from.length) === macro.from) {\n        mathTextAfterMacro += macro.to;\n        i += macro.from.length - 1;\n        continue;\n      }\n      mathTextAfterMacro += mathText[i];\n    }\n    console.log(mathTextAfterMacro);\n    return mathTextAfterMacro;\n  }\n  preprocess(tex) {\n    let rdy = tex;\n    this.state.macros.map(x => (rdy = this.handleMacro(x, rdy)));\n    return rdy;\n  }\n  toggle() {\n    this.setState({\n      settings: !this.state.settings\n    });\n  }\n  toggleEditor() {\n    this.setState({\n      showEditor: !this.state.showEditor\n    });\n  }\n  changeFont(event) {\n    this.setState({\n      texFont: event.target.value\n    });\n  }\n  render() {\n    const math = katex.renderToString(this.preprocess(this.state.content), {\n      throwOnError: false\n    });\n    return (\n      <div>\n        <div className=\"topBar\">\n          <h2 className=\"title\">\n            <i>Tmacs</i>\n          </h2>\n          <h4 className=\"title\">By Tuomas Katajisto - t@ktj.st</h4>\n        </div>\n        <div className=\"settings\">\n          <button onClick={this.toggle}>\n            {!this.state.settings ? \"Show \" : \"Hide \"}settings.\n          </button>\n          {this.state.settings && (\n            <div>\n              <input\n                type=\"checkbox\"\n                checked={this.state.showEditor}\n                onClick={this.toggleEditor}\n                name=\"showEditor\"\n                value=\"editor\"\n              />\n              Show editor\n              <div class=\"slidecontainer\">\n                Font size:{\" \"}\n                <input\n                  onChange={this.changeFont}\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  value={this.state.texFont}\n                  class=\"slider\"\n                  id=\"myRange\"\n                />\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"container\">\n          {this.state.showEditor && (\n            <textarea\n              spellCheck=\"false\"\n              id=\"textArea\"\n              className=\"textArea\"\n              onChange={this.handle}\n              value={this.state.content}\n            />\n          )}\n          <div\n            className=\"texArea\"\n            style={{ fontSize: this.state.texFont + \"px\" }}\n            dangerouslySetInnerHTML={{ __html: math }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}